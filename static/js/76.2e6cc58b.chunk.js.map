{"version":3,"file":"static/js/76.2e6cc58b.chunk.js","mappings":"iPAEAA,EAAAA,EAAAA,SAAAA,QAAA,gCACA,yBAEaC,EAAb,WAGE,cAAe,+DALL,qCAMRC,KAAKC,SAAW,kCAChBD,KAAKE,WACH,6GACH,CAPH,kFASE,WAAuBC,GAAvB,kFACQC,EAAS,IAAIC,gBAAgB,CACjCC,SAAQ,OAACN,KAAF,MACPG,KAAMA,IAHV,SAMyBL,EAAAA,EAAAA,IAAU,qBAAsB,CAAEM,OAAAA,IAN3D,uBAMUG,EANV,EAMUA,KANV,kBAOSA,GAPT,gDATF,uHAmBE,WAAsBC,EAAOL,GAA7B,kFACQC,EAAS,IAAIC,gBAAgB,CACjCC,SAAQ,OAACN,KAAF,MACPQ,MAAOA,EACPL,KAAMA,EACNM,SAAU,QACVC,eAAe,IANnB,SASyBZ,EAAAA,EAAAA,IAAU,gBAAiB,CAAEM,OAAAA,IATtD,uBASUG,EATV,EASUA,KATV,kBAUSA,GAVT,gDAnBF,sHAgCE,WAAmBI,GAAnB,kFACQP,EAAS,IAAIC,gBAAgB,CACjCC,SAAQ,OAACN,KAAF,MACPS,SAAU,QACVC,eAAe,IAJnB,kBAQ2BZ,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,YAAyBP,IARpD,uBAQYG,EARZ,EAQYA,KARZ,kBASWA,GATX,oCAWQ,KAAMK,UAAsC,MAA1B,KAAMA,SAASC,OAXzC,uBAYY,IAAIC,MAAM,0CAZtB,4EAhCF,oHAkDE,WAAmBH,GAAnB,kFACQP,EAAS,IAAIC,gBAAgB,CACjCC,SAAQ,OAACN,KAAF,MACPS,SAAU,UAHd,SAKyBX,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,oBAAiCP,IAL1D,uBAKUG,EALV,EAKUA,KALV,kBAMSA,EAAKQ,MANd,gDAlDF,sHA2DE,WAAqBJ,GAArB,kFACQP,EAAS,IAAIC,gBAAgB,CACjCC,SAAQ,OAACN,KAAF,MACPS,SAAU,UAHd,SAKyBX,EAAAA,EAAAA,IAAA,gBAAmBa,EAAnB,oBAAiCP,IAL1D,uBAKUG,EALV,EAKUA,KALV,kBAMSA,EAAKS,SANd,gDA3DF,8DAqEaC,EAAmB,IAAIlB,C,0GCzEpC,GAAgB,IAAM,kBAAkB,GAAK,iBAAiB,IAAM,kBAAkB,YAAc,0BAA0B,KAAO,oB,SC2CrI,EAvCa,WACX,IAAQY,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAAgCQ,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRL,EAAAA,EAAAA,aAA8BN,GAAIY,KAAKF,EACxC,GAAE,CAACV,IAEoB,IAApBS,EAASI,QACJ,uBAAG,2CAIV,gBAAKC,UAAWC,EAAAA,IAAhB,UACE,eAAID,UAAWC,EAAAA,GAAf,SACGN,EAASO,KAAI,SAAAC,GAAE,OACd,eAAgBH,UAAWC,EAAAA,GAA3B,UACE,oBAAQD,UAAWC,EAAAA,OAAnB,WACE,gBACEG,IACED,EAAGE,aAAH,UACOb,EAAAA,EAAAA,UADP,OACmCW,EAAGE,cAClCb,EAAAA,EAAAA,WAENc,IAAKH,EAAGI,KACRP,UAAWC,EAAAA,OAEb,wBAAYD,UAAWC,EAAAA,YAAvB,WACE,cAAGD,UAAWC,EAAAA,KAAd,SAA2BE,EAAGI,QAC9B,eAAGP,UAAWC,EAAAA,UAAd,UAA+B,cAAYE,EAAGK,oBAb3CL,EAAGjB,GADE,OAsBvB,C","sources":["Api.js","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = '9167ee7ecb36a9f774a46dedb9c5a8cc';\n\nexport class ApiMovies {\n  #API_KEY = KEY;\n\n  constructor() {\n    this.BASE_URL = 'https://image.tmdb.org/t/p/w500';\n    this.defaultImg =\n      'https://png.pngtree.com/png-vector/20200812/ourmid/pngtree-film-noir-set-clapperboard-png-image_2324477.jpg';\n  }\n\n  async getPopularMovies(page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      page: page,\n    });\n\n    const { data } = await axios.get('trending/movie/day', { params });\n    return data;\n  }\n\n  async getMovieByQuery(query, page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: query,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    });\n\n    const { data } = await axios.get('/search/movie', { params });\n    return data;\n  }\n\n  async getMovieById(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    });\n\n    try {\n      const { data } = await axios.get(`movie/${id}?${params}`);\n      return data;\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        throw new Error('Oops, there is no movie with that name');\n      }\n      throw error;\n    }\n  }\n\n  async getMovieCast(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/credits?${params}`);\n    return data.cast;\n  }\n\n  async getMovieReview(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/reviews?${params}`);\n    return data.results;\n  }\n}\n\nexport const ApiMoviesService = new ApiMovies();\n","// extracted by mini-css-extract-plugin\nexport default {\"div\":\"Cast_div__PH4d5\",\"ul\":\"Cast_ul__qE-tu\",\"img\":\"Cast_img__-isbW\",\"description\":\"Cast_description__uN0VA\",\"name\":\"Cast_name__6UbFm\"};","import { useState, useEffect } from 'react';\nimport { ApiMoviesService } from 'Api';\nimport { useParams } from 'react-router-dom';\nimport style from './Cast.module.css';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [castList, setCastList] = useState([]);\n\n  useEffect(() => {\n    ApiMoviesService.getMovieCast(id).then(setCastList);\n  }, [id]);\n\n  if (castList.length === 0) {\n    return <p>No cast info available for this movie</p>;\n  }\n\n  return (\n    <div className={style.div}>\n      <ul className={style.ul}>\n        {castList.map(el => (\n          <li key={el.id} className={style.li}>\n            <figure className={style.figure}>\n              <img\n                src={\n                  el.profile_path\n                    ? `${ApiMoviesService.BASE_URL}${el.profile_path}`\n                    : ApiMoviesService.defaultImg\n                }\n                alt={el.name}\n                className={style.img}\n              />\n              <figcaption className={style.description}>\n                <p className={style.name}>{el.name}</p>\n                <p className={style.character}>Character: {el.character}</p>\n              </figcaption>\n            </figure>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","ApiMovies","this","BASE_URL","defaultImg","page","params","URLSearchParams","api_key","data","query","language","include_adult","id","response","status","Error","cast","results","ApiMoviesService","useParams","useState","castList","setCastList","useEffect","then","length","className","style","map","el","src","profile_path","alt","name","character"],"sourceRoot":""}